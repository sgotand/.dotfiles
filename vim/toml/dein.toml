# vim: set nospell:
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # plugin for async
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]] # show :help in japanese
repo = 'vim-jp/vimdoc-ja'

[[plugins]] # provides syntax/indent for multiple
repo = 'sheerun/vim-polyglot'
merged = 0
hook_add = '''
let g:polyglot_disabled = ['markdown']
'''

#[[plugins]] # plugin for formatexpr
#repo = 'vim-jp/autofmt'

#[[plugins]]
#repo = 'rcmdnk/vim-markdown'

[[plugins]] # detect the filetype of the place of cursor
repo = 'Shougo/context_filetype.vim'

[[plugins]] # file type switching according to the cursor context
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']


[[plugins]] # plugin for colorscheme iceberg
repo = 'cocopon/iceberg.vim'
merged = 0
hook_add = '''
au VimEnter * nested colorscheme iceberg
'''


[[plugins]]
repo = 'osyo-manga/vim-anzu'
merged = 0
hook_source = '''
nmap n <Plug>(anzu-n-with-echo)
nmap N <Plug>(anzu-N-with-echo)
nmap * <Plug>(anzu-star-with-echo)
nmap # <Plug>(anzu-sharp-with-echo)

" clear status
nmap <Esc><Esc> <Plug>(anzu-clear-search-status)


" statusline
set statusline=%{anzu#search_status()}
'''

[[plugins]]
repo = 'reireias/vim-cheatsheet'
hook_source = '''
let g:cheatsheet#cheat_file = '~/.dotfiles/vim/cheatsheet.md'
let g:cheatsheet#float_window = 1
" you can change float window size.
let g:cheatsheet#float_window_width_ratio = 0.6
let g:cheatsheet#float_window_height_ratio = 0.6
'''
# :Cheat

[[plugins]] # plugin for lightline
repo = 'itchyny/lightline.vim'
depends = ['osyo-manga/vim-anzu']
hook_add = '''
call Source_rc("plugin-settings/lightline.vim")
'''

[[plugins]] # plugin for quickrun
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {}
let g:quickrun_config.cpp = { 'command': 'g++','cmdopt': '-std=c++14'}
'''

[[plugins]] # plugin for denite
repo = 'Shougo/denite.nvim'
hook_add = '''
call Source_rc("plugin-settings/denite.vim")
'''

[[plugins]] # plugin for multi cursors
repo = 'terryma/vim-multiple-cursors'

# for deoplete
[[plugins]] # plugin for deoplete on vim
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

# for deoplete
[[plugins]] # plugin for deoplete on vim
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'


#[[plugins]] # accelerated jk
#repo = 'rhysd/accelerated-jk'
#on_map = {n = '<Plug>'}
#hook_add = '''
#nmap <silent>j <Plug>(accelerated_jk_gj)
#nmap <silent>k <Plug>(accelerated_jk_gk)
#'''

# run :StripWhitespaces to remove trailing whitespaces
# [[plugins]] # trailing whitespace
# repo = 'ntpeters/vim-better-whitespace'
# hook_add ='''
# let g:better_whitespace_filetypes_blacklist=['unite', 'fzf', 'diff', 'git', 'gitcommit', 'unite', 'qf', 'help', 'fugitive']
# '''

[[plugins]] # indent line
repo = 'Yggdroot/indentLine'
hook_add = '''
let g:indentLine_char = '¦'
'''

[[plugins]] # fugitive
repo = 'tpope/vim-fugitive'
merged = 0

[[plugins]]
repo = 'airblade/vim-gitgutter'


[[plugins]]
repo = 'preservim/nerdcommenter'
hook_add = '''
let g:NERDSpaceDelims = 1
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1
" let g:NERDCreateDefaultMappings = 0
'''

[[plugins]] # comment/uncomment
repo = 'tyru/caw.vim'
hook_add = '''
"nmap <C-_> <Plug>(caw:hatpos:toggle)
"vmap <C-_> <Plug>(caw:hatpos:toggle)
nmap <C-_> <Plug>(caw:zeropos:toggle)
vmap <C-_> <Plug>(caw:zeropos:toggle)
'''


[[plugins]]
repo = 'jiangmiao/auto-pairs'


[[plugins]]
repo = 'thinca/vim-scouter'

[[plugins]]
repo = 'tyru/capture.vim'
hook_add = '''
echom 'add capture.vim'
'''
[[plugins]] # :MundoToggle
repo = 'simnalamburt/vim-mundo'
hook_add = '''
nnoremap <leader>u :<C-u>MundoToggle<CR>
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'

hook_add = '''
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

'''

[[plugins]]
repo = 'mhinz/vim-startify'

# [[plugins]]
# repo = 'kshenoy/vim-signature'

[[plugins]]
repo = 'Dimercel/todo-vim'
hook_add = '''
nnoremap <leader>t :<C-u>TODOToggle<CR>
xnoremap <leader>t :<C-u>TODOToggle<CR>
"let g:todo_vertical  = 1
"let g:todo_right = 1
'''

#[[plugins]]
#repo = 'unblevable/quick-scope'
#disable = true
#hook_add = '''
#let g:qs_max_chars=160
#let g:qs_buftype_blacklist = ['terminal', 'nofile']
#"let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
#"let g:qs_lazy_highlight = 1
#nmap <leader>q <plug>(QuickScopeToggle)
#xmap <leader>q <plug>(QuickScopeToggle)
#nnoremap <leader>, ,
#xnoremap <leader>, ,
#nnoremap <leader>. ;
#xnoremap <leader>. ;
#
#augroup qs_colors
#  autocmd!
#  autocmd ColorScheme * highlight QuickScopePrimary  ctermbg=232 ctermfg=161 cterm=underline,bold
#  autocmd ColorScheme * highlight QuickScopeSecondary ctermbg=232 ctermfg=34 cterm=underline,bold
#augroup END
#'''

[[plugins]]
repo = 'junegunn/fzf'
hook_post_update = 'call fzf#install()'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
merged = 0
on_cmd = [
  'Files',
  'ProjectFiles',
  'Buffers',
  'BLines',
  'History',
  'Tags',
  'BTags',
  'GFiles',
  'Ag',
  'Rg',
]
hook_add = '''
nnoremap <silent> ,a :<C-u>Ag<CR>
nnoremap <silent> ,f :<C-u>ProjectFiles<CR>
nnoremap <silent> ,b :<C-u>Buffers<CR>
nnoremap <silent> ,m :<C-u>History<CR>
set rtp+=$XDG_CACHE_HOME/fzf "$XDG_CACHE_HOMEの下にインストールした場合
'''
hook_source = 'call Source_rc("plugin-settings/fzf_vim_hook_source.vim")'


# [[plugins]]
# repo = 'jremmen/vim-ripgrep'


# syntax for ansible
[[plugins]]
repo = 'pearofducks/ansible-vim'

# register helper
[[plugins]]
repo = 'junegunn/vim-peekaboo'

[[plugins]]
repo = 'gcmt/taboo.vim'
hook_add = '''
set guioptions-=e
set sessionoptions+=tabpages,globals
'''
